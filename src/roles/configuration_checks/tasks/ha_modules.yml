# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# /*---------------------------------------------------------------------------8
# |                  HA Module Execution for Configuration Checks              |
# +------------------------------------4--------------------------------------*/

- name:                                 "High Availability Checks"
  become:                               true
  block:
    - name:                             "Get the SAPHanaSR provider (SUSE only)"
      when:                             >-
                                        (ansible_os_family | upper) == "SUSE" and
                                        role == 'DB'
      ansible.builtin.include_tasks:    "roles/misc/tasks/get-saphanasr-provider.yml"

    - name:                             "Execute HA DB Configuration Module"
      when:                             role == 'DB'
      get_pcmk_properties_db:
        sid:                            "{{ db_sid | upper }}"
        instance_number:                "{{ db_instance_number }}"
        virtual_machine_name:           "{{ compute_metadata.json.compute.name }}"
        fencing_mechanism:              "{{ database_cluster_type }}"
        pcmk_constants:                 "{{ lookup('file', 'roles/ha_db_hana/tasks/files/constants.yaml') | from_yaml }}"
        saphanasr_provider:             "{{ saphanasr_provider | default('SAPHanaSR') }}"
      register:                         ha_db_module_result

    - name:                             "Store HA DB configuration result"
      when:                             >-
                                        role == 'DB' and
                                        ha_db_module_result is defined
      ansible.builtin.set_fact:
        ha_db_config:                   "{{ ha_db_module_result.details.parameters }}"

    - name:                             "Execute HA SCS Configuration Module"
      when:                             role in ['SCS', 'ERS']
      get_pcmk_properties_scs:
        sid:                            "{{ sap_sid | upper }}"
        ascs_instance_number:           "{{ scs_instance_number }}"
        ers_instance_number:            "{{ ers_instance_number }}"
        virtual_machine_name:           "{{ compute_metadata.json.compute.name }}"
        fencing_mechanism:              "{{ scs_cluster_type }}"
        nfs_provider:                   "{{ NFS_provider }}"
        pcmk_constants:                 "{{ lookup('file', 'roles/ha_scs/tasks/files/constants.yaml') | from_yaml }}"
      register:                         ha_scs_module_result

    - name:                             "Store HA SCS configuration result"
      when:                             >-
                                        role in ['SCS', 'ERS'] and
                                        ha_scs_module_result is defined
      ansible.builtin.set_fact:
        ha_scs_config:                  "{{ ha_scs_module_result.details.parameters }}"

    - name:                             "Get the Azure Load Balancer IP"
      ansible.builtin.uri:
        url:                            http://169.254.169.254:80/metadata/loadbalancer?api-version=2020-10-01
        use_proxy:                      false
        headers:
          Metadata:                     true
      register:                         azure_loadbalancer_metadata

    - name:                             "Execute Azure Load Balancer Configuration Module"
      delegate_to:                      localhost
      get_azure_lb:
        subscription_id:                "{{ compute_metadata.json.compute.subscriptionId }}"
        region:                         "{{ compute_metadata.json.compute.location }}"
        inbound_rules:                  "{{ azure_loadbalancer_metadata.json.loadbalancer.inboundRules }}"
        constants:                      "{{ lookup('file', 'roles/ha_scs/tasks/files/constants.yaml') | from_yaml }}"
        msi_client_id:                  "{{ user_assigned_identity_client_id | default('') }}"
      register:                         ha_loadbalancer_module_result

    - name:                             "Debug HA Load Balancer configuration result"
      when:                             ha_loadbalancer_module_result is defined
      ansible.builtin.debug:
        var:                            ha_loadbalancer_module_result
        verbosity:                      1

    - name:                             "Store HA Load Balancer configuration result"
      when:                             >-
                                        ha_loadbalancer_module_result is defined and
                                        ha_loadbalancer_module_result.details is defined and
                                        ha_loadbalancer_module_result.details.parameters is defined
      ansible.builtin.set_fact:
        ha_loadbalancer_config:        "{{ ha_loadbalancer_module_result.details.parameters | default([]) }}"
