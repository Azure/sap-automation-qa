# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

# /*---------------------------------------------------------------------------|
# |            Pre Validation Tasks for HANA DB Tests                         |
# /*---------------------------------------------------------------------------|

- name:                             "Pre Validation: HANA DB Nodes"
  when:                             node_tier == "hana"
  block:
    - name:                         "Pre Validation: Remove any location_constraints"
      become:                       true
      location_constraints:
        action:                     "remove"
      register:                     location_constraints_results

    - name:                         "Pre validation: Get SAPHanaSR provider"
      when:                         (ansible_os_family | upper) == "SUSE"
      ansible.builtin.include_tasks: "roles/misc/tasks/get-saphanasr-provider.yml"

    - name:                         "Pre validation: Get HANA resource id for saphanasr_angi"
      when:                         saphanasr_provider | default('SAPHanaSR') == "SAPHanaSR-angi"
      block:
        - name:                     "Pre validation: Get HANA clone resource id for saphanasr_angi"
          become:                   true
          ansible.builtin.shell: >-
                                    set -o pipefail && {{ commands
                                      | selectattr('name','equalto','get_hana_clone_resource_id_saphanasr_angi')
                                      | map(attribute=(ansible_os_family|upper))
                                      | first
                                    }}
          args:
            executable:             /bin/bash
          changed_when:             false
          register:                 hana_clone_resource_id
          failed_when:              hana_clone_resource_id.rc != 0

        - name:                     "Pre validation: Get HANA primitive resource id for saphanasr_angi"
          become:                   true
          ansible.builtin.shell: >-
                                    set -o pipefail && {{ commands
                                      | selectattr('name','equalto','get_hana_primitive_resource_id_saphanasr_angi')
                                      | map(attribute=(ansible_os_family|upper))
                                      | first
                                    }}
          args:
            executable:             /bin/bash
          changed_when:             false
          register:                 hana_primitive_resource_id
          failed_when:              hana_primitive_resource_id.rc != 0

        - name:                     "Pre validation: Set fact the hana_clone_resource_name"
          ansible.builtin.set_fact:
            hana_clone_resource_name: "{{ hana_clone_resource_id.stdout }}"
            hana_primitive_resource_name: "{{ hana_primitive_resource_id.stdout }}"

    - name:                         "Pre validation: Get HANA Clone resource id"
      when:                         saphanasr_provider | default('SAPHanaSR') == "SAPHanaSR"
      block:
        - name:                     "Try master resource ID"
          become:                   true
          ansible.builtin.shell: >-
                                    set -o pipefail && {{ commands
                                      | selectattr('name','equalto','get_hana_clone_resource_id')
                                      | map(attribute=(ansible_os_family|upper))
                                      | first
                                    }}
          args:
            executable:             /bin/bash
          changed_when:             false
          register:                 hana_clone_resource_id
          failed_when:              hana_clone_resource_id.rc != 0
      rescue:
        - name:                     "Try clone resource ID"
          become:                   true
          ansible.builtin.shell: >-
                                    set -o pipefail && {{ commands
                                      | selectattr('name','equalto','get_hana_clone_resource_id')
                                      | map(attribute='REDHAT')
                                      | first
                                    }}
          args:
            executable:             /bin/bash
          changed_when:             false
          register:                 hana_clone_resource_id
          failed_when:              hana_clone_resource_id.rc != 0
          ignore_errors:            true
      always:
        - name:                     "Test Execution: Set the resource name"
          when:
                                    - hana_clone_resource_id.rc == 0
                                    - hana_clone_resource_id.stdout is defined
                                    - hana_clone_resource_id.stdout | type_debug != 'NoneType'
                                    - hana_clone_resource_id.stdout | trim | length > 1
          ansible.builtin.set_fact:
            hana_clone_resource_name:     "{{ hana_clone_resource_id.stdout }}"

    - name:                         "Pre validation: Get HANA Primitive resource id"
      when:                         saphanasr_provider | default('SAPHanaSR') == "SAPHanaSR"
      block:
        - name:                     "Pre validation: Get HANA Primitive resource id"
          become:                   true
          ansible.builtin.shell: >-
                                    set -o pipefail && {{ commands
                                      | selectattr('name','equalto','get_hana_primitive_resource_id')
                                      | map(attribute=(ansible_os_family|upper))
                                      | first
                                    }}
          args:
            executable:             /bin/bash
          changed_when:             false
          register:                 hana_primitive_resource_id
          failed_when:              hana_primitive_resource_id.rc != 0

        - name:                     "Pre validation: Set fact the hana_primitive_resource_name"
          ansible.builtin.set_fact:
            hana_primitive_resource_name: "{{ hana_primitive_resource_id.stdout }}"

    - name:                         "Pre Validation: Validate HANA DB cluster status on primary node"
      become:                       true
      get_cluster_status_db:
        db_instance_number:         "{{ db_instance_number }}"
        operation_step:             "pre_failover"
        database_sid:               "{{ db_sid | lower }}"
        saphanasr_provider:         "{{ saphanasr_provider | default('SAPHanaSR') }}"
        hana_clone_resource_name:   "{{ hana_clone_resource_name | default('') }}"
        hana_primitive_resource_name: "{{ hana_primitive_resource_name | default('') }}"
      register:                     cluster_status_pre
      until:                        cluster_status_pre.primary_node != "" or
                                    cluster_status_pre.secondary_node != ""
      retries:                      3

    - name:                         "Pre Validation: CleanUp any failed resource"
      become:                       true
      ansible.builtin.command:      crm_resource --cleanup
      ignore_errors:                true
      register:                     cleanup_failed_resource_pre
      timeout:                      "{{ default_timeout }}"
      retries:                      3
      until:                        cleanup_failed_resource_pre.rc == 0
      changed_when:                 cleanup_failed_resource_pre.rc == 0
      failed_when:                  cleanup_failed_resource_pre.rc != 0

    - name:                         "Pre Validation: Set default pre Validation status as false"
      ansible.builtin.set_fact:
        pre_validations_status:     "FAILED"

    - name:                         "Pre Validation: Set pre Validation status"
      when:
                                    - cluster_status_pre is defined
                                    - cluster_status_pre.primary_node != "" and
                                      cluster_status_pre.secondary_node != ""
                                    - cluster_status_pre.pacemaker_status == "running"
      ansible.builtin.set_fact:
        pre_validations_status:     "PASSED"
